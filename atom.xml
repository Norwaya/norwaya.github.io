<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Norwaya</title>
  <subtitle>share</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://norwaya.github.io/"/>
  <updated>2017-01-17T01:57:14.583Z</updated>
  <id>https://norwaya.github.io/</id>
  
  <author>
    <name>norwaya</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>test</title>
    <link href="https://norwaya.github.io/test/"/>
    <id>https://norwaya.github.io/test/</id>
    <published>2017-01-16T00:54:10.000Z</published>
    <updated>2017-01-17T01:57:14.583Z</updated>
    
    <content type="html"><![CDATA[<p>在连接数据库之前必须保证SQL Server 2012是采用SQL Server身份验证方式而不是windows身份验证方式。如果在安装时选用了后者，则重新设置如下:<br>        设置SQL Server 2012的身份验证方式：<br>            1.在连接的服务器上右击，选择属性<br>            2.点击左侧上的安全性，在栏目中选择SQL Server和Windows身份验证<br>            3.设置sa的密码和sa登录名<br>                在根目录下，点击安全性-&gt;登录名-&gt;选择sa登录名右击选择属性<br>                点击左侧上的常规，在右侧设置登录名sa和密码<br>            4.设置完账号密码后，在sa登录名的属性里在左侧上点击状态，在右侧的登录下选择启用<br>            5.重启sql server服务器<br>采用了SQL server身份验证的方式后，在所有程序中打开SQL Server配置管理器，在配置管理器窗口的左侧找到SQL Server网络配置，然后展开点击“ ‘数据库名’ 的协议”，将右侧中的协议全部开启。接下来双击TCP/IP协议，选择IP地址在下面的一个栏目中选择一个IP填入IP地址，TCP端口号，活动选择是，已启用选择是。最后SQL Server服务</p>
<p>先开启Telnet服务：打开“控制面板”→“程序”，“在程序和功能”找到并点击“打开或关闭Windows 功能”进入Windows 功能设置对话框。找到并勾选“Telnet客户端，最后“确定”稍等片刻即可完成安装。除此之外，我们也可通过该向导安装 “TFTP客户端”、“Internet 信息服务”等。</p>
<p> 安装完成后，Telnet服务默认情况下是禁用的。还需执行“开始”→“运行”，输入services.msc打开服务管理器。找到并双击Telnet服务项，设置其启动方式为“手动”(更安全，只在需要的时候才启用)，最后“启动”该服务“确定”退出即可。<br>打开命令提示符窗口-&gt;输入： telnet 127.0.0.1 1433<br>连接成功会进入一片全黑的界面，连接失败会提示连接失败</p>
<p>接下来配置环境变量 CLASSPATH：<br>下载Microsoft JDBC Driver 4.0 for SQL Server，解压文件，得到sqljdbc.jar和sqljdbc4.jar。如果使用的是jre1.7版本，则忽略sqljdbc.jar（因为使用不了，而且如果和sqljdbc4.jar一起用会出错）。<br>以下设置均针对jre1.7版本（1.7以下应该也适用）：<br>在D盘新建一个文件夹，命名为sqljdbc4，将sqljdbc4.jar复制一个进去。<br>右击 我的电脑 → 属性 → 高级系统设置（高级） → 环境变量，在系统变量中双击CLASSPATH变量（或选中CLASSPATH后 → 编辑），在最后面追加 “;D:\sqljdbc4 \sqljdbc4.jar” （注意最前面有个 ; ）若不存在CLASSPATH，就新建CLASSPATH变量，并且将其值设为“D:\sqljdbc4 \sqljdbc4.jar”。</p>
<p>配置完环境变量后，将sqljdbc4.jar类库文件拷贝到D:\Program Files\Java\jdk1.7.0\jre\lib\ext目录下。（拷贝到安装的jdk的jdk\jre\lib\ext的目录下），同时将sqljdbc4.jar类库文件拷贝到D:\Program Files\Java\jre7\lib\ext目录下（拷贝到安装的jdk的jdk\jre\lib\ext的目录下）</p>
<p>如果是使用Tomcat做服务器，那么需要将sqljdbc4.jar类库文件拷贝到C:\apache-tomcat-7.0.11\lib目录下（tomcat的安装目录）。 同时将sqljdbc4.jar类库文件拷贝到D:\apache-tomcat-7.0.11\webapps\test\WEB-INF\lib目录下（test目录是个人应用）</p>
<p>给eclipse中的项目添加sqljdbc4.jar包</p>
<p>经过以上配置即可使用Java通过jdbc连接sql server</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在连接数据库之前必须保证SQL Server 2012是采用SQL Server身份验证方式而不是windows身份验证方式。如果在安装时选用了后者，则重新设置如下:&lt;br&gt;        设置SQL Server 2012的身份验证方式：&lt;br&gt;            1
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>NormalAdapter</title>
    <link href="https://norwaya.github.io/NormalAdapter/"/>
    <id>https://norwaya.github.io/NormalAdapter/</id>
    <published>2017-01-14T09:32:00.000Z</published>
    <updated>2017-01-14T09:35:43.535Z</updated>
    
    <content type="html"><![CDATA[<h1 id="通用的RecyclerView-Adapter"><a href="#通用的RecyclerView-Adapter" class="headerlink" title="通用的RecyclerView.Adapter"></a>通用的RecyclerView.Adapter</h1><a id="more"></a>
<pre><code> package norwaya.android.com.adapterlibrary;

import android.content.Context;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by admin on 2017/1/14.
 */

public class NormalAdapter&lt;T&gt; extends RecyclerView.Adapter&lt;NormalAdapter.ViewHolder&gt; {


List&lt;T&gt; list = new ArrayList&lt;&gt;();
LayoutInflater inflater;

OnCreateViewHolderListener mOnCreateViewHolderListener;
OnBindViewHolderListener mOnBindViewHolderListener;


public NormalAdapter() {
}
public static NormalAdapter newInstance(){
    return new NormalAdapter();
}
public NormalAdapter createView(OnCreateViewHolderListener mOnCreateViewHolderListener) {
    this.mOnCreateViewHolderListener = mOnCreateViewHolderListener;
    return this;
}

public NormalAdapter bindView(OnBindViewHolderListener mOnBindViewHolderListener) {
    this.mOnBindViewHolderListener = mOnBindViewHolderListener;
    return this;
}

public void bindSource(List&lt;? extends T&gt; list) {
    this.list = (List&lt;T&gt;) list;
    notifyDataSetChanged();
}

public interface OnCreateViewHolderListener {
    ViewHolder createViewHoler(ViewGroup parent, int viewType);
}

/**
 * Created by admin on 2017/1/14.
 */
public interface OnBindViewHolderListener {
    void onBindViewHolder(ViewHolder holder, int position);
}

@Override
public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
    if (mOnCreateViewHolderListener != null) {
        return mOnCreateViewHolderListener.createViewHoler(parent, viewType);
    }
    return null;
}

@Override
public void onBindViewHolder(ViewHolder holder, int position) {
    if (mOnBindViewHolderListener != null) {
        mOnBindViewHolderListener.onBindViewHolder(holder, position);
    }
}

@Override
public int getItemCount() {
    return list.size();
}

public abstract static class ViewHolder extends RecyclerView.ViewHolder {

    public ViewHolder(View itemView) {
        super(itemView);
    }
}
</code></pre><p>}</p>
<h1 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h1><pre><code>NormalAdapter adapter = NormalAdapter.newInstance()
  .createView(new NormalAdapter.OnCreateViewHolderListener() {
        @Override
        public NormalAdapter.ViewHolder createViewHoler(ViewGroup parent, int viewType) {
            View view = LayoutInflater.from(MainActivity.this).inflate(R.layout.recyclerview_item, parent, false);
            return new ViewHolder(view);
        }
    })
    .bindView(new NormalAdapter.OnBindViewHolderListener() {
        @Override
        public void onBindViewHolder(NormalAdapter.ViewHolder holder, int position) {
            ViewHolder viewHolder = (ViewHolder) holder;
            viewHolder.tv1.setText(position + &quot;&quot;);
            viewHolder.tv2.setText(array[position]);
        }
    });
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;通用的RecyclerView-Adapter&quot;&gt;&lt;a href=&quot;#通用的RecyclerView-Adapter&quot; class=&quot;headerlink&quot; title=&quot;通用的RecyclerView.Adapter&quot;&gt;&lt;/a&gt;通用的RecyclerView.Adapter&lt;/h1&gt;
    
    </summary>
    
      <category term="coding" scheme="https://norwaya.github.io/categories/coding/"/>
    
    
      <category term="android" scheme="https://norwaya.github.io/tags/android/"/>
    
      <category term="adapter" scheme="https://norwaya.github.io/tags/adapter/"/>
    
  </entry>
  
  <entry>
    <title>Hexo deploy to github and coding</title>
    <link href="https://norwaya.github.io/hexo-deployment/"/>
    <id>https://norwaya.github.io/hexo-deployment/</id>
    <published>2017-01-13T10:11:22.000Z</published>
    <updated>2017-01-14T01:40:30.800Z</updated>
    
    <content type="html"><![CDATA[<h6 id="如果是用同一个秘钥部署配置如下"><a href="#如果是用同一个秘钥部署配置如下" class="headerlink" title="如果是用同一个秘钥部署配置如下"></a>如果是用同一个秘钥部署配置如下</h6><pre><code>deploy:
  type: git
  repo: 
    coding: git@git.coding.net:norwaya/norwaya.git,master
    github: git@github.com:norwaya/norwaya.github.io.git,master
  branch: master
</code></pre><a id="more"></a>    
<h6 id="每个代码托管网站有都自己的秘钥的时候配置"><a href="#每个代码托管网站有都自己的秘钥的时候配置" class="headerlink" title="每个代码托管网站有都自己的秘钥的时候配置"></a>每个代码托管网站有都自己的秘钥的时候配置</h6><pre><code>deploy:
  type: git
  repo: 
    coding: git@git.coding.net:norwaya/norwaya.git,master
    github: git@github.com:norwaya/norwaya.github.io.git,master
  branch: master
然后要在.ssh 下增加config文件
#github key
Host github.com
   Port 22   
   HostName github.com    
   PreferredAuthentications publickey    
   IdentityFile ~/.ssh/github.id_rsa
# coding key
Host git.coding.net    
  Port 443   
  HostName git-ssh.coding.net    
  PreferredAuthentications publickey    
  IdentityFile ~/.ssh/coding.id_rsa
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;如果是用同一个秘钥部署配置如下&quot;&gt;&lt;a href=&quot;#如果是用同一个秘钥部署配置如下&quot; class=&quot;headerlink&quot; title=&quot;如果是用同一个秘钥部署配置如下&quot;&gt;&lt;/a&gt;如果是用同一个秘钥部署配置如下&lt;/h6&gt;&lt;pre&gt;&lt;code&gt;deploy:
  type: git
  repo: 
    coding: git@git.coding.net:norwaya/norwaya.git,master
    github: git@github.com:norwaya/norwaya.github.io.git,master
  branch: master
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="编程" scheme="https://norwaya.github.io/categories/programming/"/>
    
    
      <category term="hexo" scheme="https://norwaya.github.io/tags/hexo/"/>
    
      <category term="github" scheme="https://norwaya.github.io/tags/github/"/>
    
      <category term="coding" scheme="https://norwaya.github.io/tags/coding/"/>
    
      <category term="部署" scheme="https://norwaya.github.io/tags/%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>android 视差因子</title>
    <link href="https://norwaya.github.io/android-ParallaxMultiplier/"/>
    <id>https://norwaya.github.io/android-ParallaxMultiplier/</id>
    <published>2017-01-13T10:10:35.000Z</published>
    <updated>2017-01-14T01:36:52.381Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo:"></a>Demo:</h1><a id="more"></a>
<h1 id="code"><a href="#code" class="headerlink" title="code"></a>code</h1><pre><code> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;android.support.design.widget.CoordinatorLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
  xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;&gt;
    &lt;android.support.design.widget.AppBarLayout
        android:id=&quot;@+id/appbar&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;160dp&quot;&gt;
        &lt;android.support.design.widget.CollapsingToolbarLayout
            android:id=&quot;@+id/collapsing_toolbar&quot;
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;match_parent&quot;
            app:expandedTitleMarginEnd=&quot;64dp&quot;
            app:contentScrim=&quot;?attr/colorPrimary&quot;
            app:expandedTitleMarginStart=&quot;48dp&quot;
            app:statusBarScrim=&quot;?attr/colorPrimary&quot;
            app:layout_scrollFlags=&quot;scroll|exitUntilCollapsed&quot;&gt;
    &lt;ImageView
        android:id=&quot;@+id/image&quot;
        app:layout_collapseParallaxMultiplier=&quot;0.6&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        android:scaleType=&quot;fitXY&quot;
        android:src=&quot;@drawable/image&quot;
        app:layout_collapseMode=&quot;parallax&quot; /&gt;
            &lt;android.support.v7.widget.Toolbar
                android:id=&quot;@+id/toolbar&quot;
                android:layout_width=&quot;match_parent&quot;
                android:layout_height=&quot;?attr/actionBarSize&quot;
                app:layout_collapseMode=&quot;pin&quot;
                app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot;&gt;&lt;/android.support.v7.widget.Toolbar&gt;
        &lt;/android.support.design.widget.CollapsingToolbarLayout&gt;
    &lt;/android.support.design.widget.AppBarLayout&gt;
    &lt;android.support.v4.widget.NestedScrollView
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;&gt;
    &lt;/android.support.v4.widget.NestedScrollView&gt;
    &lt;android.support.design.widget.FloatingActionButton
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:src=&quot;@android:drawable/ic_input_add&quot;
        app:backgroundTintMode=&quot;multiply&quot;
        app:layout_anchor=&quot;@id/appbar&quot;
        app:layout_anchorGravity=&quot;bottom|end|right&quot;&gt;&lt;/android.support.design.widget.FloatingActionButton&gt;
&lt;/android.support.design.widget.CoordinatorLayout&gt;
</code></pre><p>imageView 注释：<br>layout_collapseMode (折叠模式) - 有两个值:<br>pin -  设置为这个模式时，当CollapsingToolbarLayout完全收缩后，Toolbar还可以保留在屏幕上。<br>parallax - 设置为这个模式时，在内容滚动时，CollapsingToolbarLayout中的View（比如ImageView)也可以同时滚动，实现视差滚动效果，通常和layout_collapseParallaxMultiplier(设置视差因子)搭配使用。<br>layout_collapseParallaxMultiplier(视差因子) - 设置视差滚动因子，值为：0~1。  具体效果自行测试</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo:&quot;&gt;&lt;/a&gt;Demo:&lt;/h1&gt;
    
    </summary>
    
      <category term="编程" scheme="https://norwaya.github.io/categories/programming/"/>
    
    
      <category term="android" scheme="https://norwaya.github.io/tags/android/"/>
    
      <category term="AppBarLayout" scheme="https://norwaya.github.io/tags/AppBarLayout/"/>
    
      <category term="CoordinatorLayout" scheme="https://norwaya.github.io/tags/CoordinatorLayout/"/>
    
  </entry>
  
  <entry>
    <title>rxjava 实现的 rxbus</title>
    <link href="https://norwaya.github.io/rxjava-rxbus/"/>
    <id>https://norwaya.github.io/rxjava-rxbus/</id>
    <published>2017-01-13T05:20:13.000Z</published>
    <updated>2017-01-14T01:37:06.982Z</updated>
    
    <content type="html"><![CDATA[<h2 id="implemetns"><a href="#implemetns" class="headerlink" title="implemetns"></a>implemetns</h2><pre><code>compile &apos;io.reactivex.rxjava2:rxandroid:2.0.1&apos;
compile &apos;io.reactivex.rxjava2:rxjava:2.0.4&apos;
</code></pre><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><a id="more"></a>
<pre><code>public   class MessageEvent {
private String text;

public MessageEvent(String text) {
    this.text = text;
}

public String getText() {
    return text;
}
</code></pre><p>}</p>
<h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><pre><code>import io.reactivex.Observable;
import io.reactivex.subjects.PublishSubject;
import io.reactivex.subjects.Subject;
/**
 * Created by HanHailong on 15/10/9.
 */
public class RxBus {

    private static volatile RxBus mDefaultInstance;

    private RxBus() {
    }

    public static RxBus getDefault() {
        if (mDefaultInstance == null) {
            synchronized (RxBus.class) {
                if (mDefaultInstance == null) {
                    mDefaultInstance = new RxBus();
                }
            }
        }
        return mDefaultInstance;
    }

    private final Subject&lt;Object&gt; _bus = PublishSubject.create().toSerialized();

    public void send(Object o) {
        _bus.onNext(o);
    }

    public &lt;T&gt; Observable&lt;T&gt; toObservable(Class&lt;T&gt; classType) {
        return _bus.ofType(classType);
    }
}
</code></pre><h2 id="接受事件"><a href="#接受事件" class="headerlink" title="接受事件"></a>接受事件</h2><pre><code>Disposable disposable = RxBus.getDefault().toObservable(MessageEvent.class).subscribe(new Consumer&lt;MessageEvent&gt;() {
        @Override
        public void accept(MessageEvent event) throws Exception {
            Toast.makeText(MainActivity.this, TAG + event.getText(), Toast.LENGTH_LONG).show();
            tv.setText(event.getText());
            Log.d(TAG, &quot;onMessageEvent: &quot;);
        }
    });
</code></pre><h2 id="发送事件"><a href="#发送事件" class="headerlink" title="发送事件"></a>发送事件</h2><pre><code>RxBus.getDefault().send(new MessageEvent(&quot; hello rx bus&quot;));
</code></pre><h2 id="取消订阅"><a href="#取消订阅" class="headerlink" title="取消订阅"></a>取消订阅</h2><pre><code>if(disposable != null &amp;&amp; disposable.isDisposed()){
        disposable.dispose();
}
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;implemetns&quot;&gt;&lt;a href=&quot;#implemetns&quot; class=&quot;headerlink&quot; title=&quot;implemetns&quot;&gt;&lt;/a&gt;implemetns&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;compile &amp;apos;io.reactivex.rxjava2:rxandroid:2.0.1&amp;apos;
compile &amp;apos;io.reactivex.rxjava2:rxjava:2.0.4&amp;apos;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;
    
    </summary>
    
      <category term="java" scheme="https://norwaya.github.io/categories/java/"/>
    
    
      <category term="android" scheme="https://norwaya.github.io/tags/android/"/>
    
      <category term="java" scheme="https://norwaya.github.io/tags/java/"/>
    
      <category term="rxbus" scheme="https://norwaya.github.io/tags/rxbus/"/>
    
      <category term="rxjava" scheme="https://norwaya.github.io/tags/rxjava/"/>
    
  </entry>
  
  <entry>
    <title>rxjava 实现的 rxbus</title>
    <link href="https://norwaya.github.io/rxjava%20%E5%AE%9E%E7%8E%B0%20rxbus/"/>
    <id>https://norwaya.github.io/rxjava 实现 rxbus/</id>
    <published>2017-01-13T05:20:13.000Z</published>
    <updated>2017-01-13T06:37:29.720Z</updated>
    
    <content type="html"><![CDATA[<h2 id="implemetns"><a href="#implemetns" class="headerlink" title="implemetns"></a>implemetns</h2><pre><code>compile &apos;io.reactivex.rxjava2:rxandroid:2.0.1&apos;
compile &apos;io.reactivex.rxjava2:rxjava:2.0.4&apos;
</code></pre><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><a id="more"></a>
<pre><code>public   class MessageEvent {
private String text;

public MessageEvent(String text) {
    this.text = text;
}

public String getText() {
    return text;
}
</code></pre><p>}</p>
<h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><pre><code>import io.reactivex.Observable;
import io.reactivex.subjects.PublishSubject;
import io.reactivex.subjects.Subject;
/**
 * Created by HanHailong on 15/10/9.
 */
public class RxBus {

    private static volatile RxBus mDefaultInstance;

    private RxBus() {
    }

    public static RxBus getDefault() {
        if (mDefaultInstance == null) {
            synchronized (RxBus.class) {
                if (mDefaultInstance == null) {
                    mDefaultInstance = new RxBus();
                }
            }
        }
        return mDefaultInstance;
    }

    private final Subject&lt;Object&gt; _bus = PublishSubject.create().toSerialized();

    public void send(Object o) {
        _bus.onNext(o);
    }

    public &lt;T&gt; Observable&lt;T&gt; toObservable(Class&lt;T&gt; classType) {
        return _bus.ofType(classType);
    }
}
</code></pre><h2 id="接受事件"><a href="#接受事件" class="headerlink" title="接受事件"></a>接受事件</h2><pre><code>Disposable disposable = RxBus.getDefault().toObservable(MessageEvent.class).subscribe(new Consumer&lt;MessageEvent&gt;() {
        @Override
        public void accept(MessageEvent event) throws Exception {
            Toast.makeText(MainActivity.this, TAG + event.getText(), Toast.LENGTH_LONG).show();
            tv.setText(event.getText());
            Log.d(TAG, &quot;onMessageEvent: &quot;);
        }
    });
</code></pre><h2 id="发送事件"><a href="#发送事件" class="headerlink" title="发送事件"></a>发送事件</h2><pre><code>RxBus.getDefault().send(new MessageEvent(&quot; hello rx bus&quot;));
</code></pre><h2 id="取消订阅"><a href="#取消订阅" class="headerlink" title="取消订阅"></a>取消订阅</h2><pre><code>if(disposable != null &amp;&amp; disposable.isDisposed()){
        disposable.dispose();
}
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;implemetns&quot;&gt;&lt;a href=&quot;#implemetns&quot; class=&quot;headerlink&quot; title=&quot;implemetns&quot;&gt;&lt;/a&gt;implemetns&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;compile &amp;apos;io.reactivex.rxjava2:rxandroid:2.0.1&amp;apos;
compile &amp;apos;io.reactivex.rxjava2:rxjava:2.0.4&amp;apos;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;
    
    </summary>
    
      <category term="java" scheme="https://norwaya.github.io/categories/java/"/>
    
    
      <category term="android" scheme="https://norwaya.github.io/tags/android/"/>
    
      <category term="java" scheme="https://norwaya.github.io/tags/java/"/>
    
      <category term="rxbus" scheme="https://norwaya.github.io/tags/rxbus/"/>
    
      <category term="rxjava" scheme="https://norwaya.github.io/tags/rxjava/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇hexo文章</title>
    <link href="https://norwaya.github.io/hexo-settings/"/>
    <id>https://norwaya.github.io/hexo-settings/</id>
    <published>2017-01-13T02:06:53.000Z</published>
    <updated>2017-01-14T01:35:45.646Z</updated>
    
    <content type="html"><![CDATA[<h1 id="你好-hexo"><a href="#你好-hexo" class="headerlink" title="你好 hexo"></a>你好 hexo</h1><pre><code>这是我的第一篇hexo文章，当然我本来想写hello world 为题的blog，可是被hexo占了先机，我被迫改了名字。
存档
</code></pre><h1 id="blog-settings"><a href="#blog-settings" class="headerlink" title="blog settings"></a>blog settings</h1><pre><code>[hexo blog 主题配置教程](https://github.com/litten/hexo-theme-yilia) 
[hexo 官方配置教程](https://hexo.io/zh-cn/docs/) 
</code></pre><p><img src="http://p1.bpimg.com/4851/d7ba213a3ac9372d.png" alt="这里写图片描述"><br><a id="more"></a></p>
<h1 id="Settings"><a href="#Settings" class="headerlink" title="Settings"></a>Settings</h1><h2 id="site-网站"><a href="#site-网站" class="headerlink" title="site(网站)"></a>site(网站)</h2><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>title</td>
<td style="text-align:left">网站标题</td>
</tr>
<tr>
<td>subtitle</td>
<td style="text-align:left">网站副标题</td>
</tr>
<tr>
<td>description</td>
<td style="text-align:left">网站描述</td>
</tr>
<tr>
<td>author</td>
<td style="text-align:left">您的名字</td>
</tr>
<tr>
<td>language</td>
<td style="text-align:left">网站使用的语言</td>
</tr>
<tr>
<td>timezone</td>
<td style="text-align:left">网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。</td>
</tr>
</tbody>
</table>
<h2 id="url"><a href="#url" class="headerlink" title="url"></a>url</h2><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:left">描述</th>
<th>默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td>url</td>
<td style="text-align:left">网址</td>
</tr>
<tr>
<td>root</td>
<td style="text-align:left">网站根目录</td>
</tr>
<tr>
<td>permalink</td>
<td style="text-align:left">文章的 永久链接 格式</td>
<td>:year/:month/:day/:title/</td>
</tr>
<tr>
<td>permalink_default</td>
<td style="text-align:left">永久链接中各部分的默认值</td>
</tr>
</tbody>
</table>
<blockquote>
<h5 id="网站存放在子目录"><a href="#网站存放在子目录" class="headerlink" title="网站存放在子目录"></a>网站存放在子目录</h5><p>如果您的网站存放在子目录中，例如 <a href="http://yoursite.com/blog，则请将您的" target="_blank" rel="external">http://yoursite.com/blog，则请将您的</a> url 设为 <a href="http://yoursite.com/blog" target="_blank" rel="external">http://yoursite.com/blog</a> 并把 root 设为 /blog/。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;你好-hexo&quot;&gt;&lt;a href=&quot;#你好-hexo&quot; class=&quot;headerlink&quot; title=&quot;你好 hexo&quot;&gt;&lt;/a&gt;你好 hexo&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;这是我的第一篇hexo文章，当然我本来想写hello world 为题的blog，可是被hexo占了先机，我被迫改了名字。
存档
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;blog-settings&quot;&gt;&lt;a href=&quot;#blog-settings&quot; class=&quot;headerlink&quot; title=&quot;blog settings&quot;&gt;&lt;/a&gt;blog settings&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;[hexo blog 主题配置教程](https://github.com/litten/hexo-theme-yilia) 
[hexo 官方配置教程](https://hexo.io/zh-cn/docs/) 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;http://p1.bpimg.com/4851/d7ba213a3ac9372d.png&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="编程" scheme="https://norwaya.github.io/categories/programming/"/>
    
    
      <category term="hexo" scheme="https://norwaya.github.io/tags/hexo/"/>
    
      <category term="第一篇" scheme="https://norwaya.github.io/tags/%E7%AC%AC%E4%B8%80%E7%AF%87/"/>
    
      <category term="blog" scheme="https://norwaya.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Hello world</title>
    <link href="https://norwaya.github.io/hello-world/"/>
    <id>https://norwaya.github.io/hello-world/</id>
    <published>2017-01-12T07:36:29.645Z</published>
    <updated>2017-01-14T01:38:04.607Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a>
<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://norwaya.github.io/categories/hexo/"/>
    
      <category term="blog" scheme="https://norwaya.github.io/categories/hexo/blog/"/>
    
    
      <category term="markdown" scheme="https://norwaya.github.io/tags/markdown/"/>
    
      <category term="start" scheme="https://norwaya.github.io/tags/start/"/>
    
      <category term="hexo" scheme="https://norwaya.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[常用依赖包]]></title>
      <url>https://norwaya.github.io/%E4%BE%9D%E8%B5%96%E5%8C%85/</url>
      <content type="html"><![CDATA[<h1 id="常用的依赖包"><a href="#常用的依赖包" class="headerlink" title="常用的依赖包"></a>常用的依赖包</h1><h2 id="android-floating-searchview"><a href="#android-floating-searchview" class="headerlink" title="android floating searchview"></a>android floating searchview</h2><pre><code>[android-floating-searchView](https://github.com/arimorty/floatingsearchview.git)
fragment中实现的searchview 绑定了左侧的drawer。浮动特性的
</code></pre><p>&lt;!—more-&gt;</p>
<h2 id="。。。。。。"><a href="#。。。。。。" class="headerlink" title="。。。。。。"></a>。。。。。。</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[支付宝五福你集够了吗]]></title>
      <url>https://norwaya.github.io/blessing/</url>
      <content type="html"><![CDATA[<h1 id="支付宝五福你集够了吗-揭秘支付宝福字扫描技巧（全文）"><a href="#支付宝五福你集够了吗-揭秘支付宝福字扫描技巧（全文）" class="headerlink" title="支付宝五福你集够了吗 揭秘支付宝福字扫描技巧（全文）"></a>支付宝五福你集够了吗 揭秘支付宝福字扫描技巧（全文）</h1><p>2017年春节，支付宝再次推出了“五福红包”活动，表示要“把欠大家的敬业福都还给大家”。<br><a id="more"></a><br>    <img src="http://cms-bucket.nosdn.127.net/56f3abb5747d40eab9a639da5b42f90020170118151201.png" alt="支付宝五福你集够了吗 揭秘支付宝福字扫描技巧"></p>
<p>支付宝五福你集够了吗 揭秘支付宝福字扫描技巧<br>今年支付宝再次推出了“五福红包”活动，表示要“把欠大家的敬业福都还给大家”。和去年一样，集齐五福还有机会获得巨额红包，“五福”分别是： 富强福、和谐福、友善福、爱国福和敬业福。</p>
<h1 id="支付宝福字扫描技巧"><a href="#支付宝福字扫描技巧" class="headerlink" title="支付宝福字扫描技巧"></a>支付宝福字扫描技巧</h1><pre><code>大家打开手机支付宝，在首页就能看到活动入口，使用AR扫一扫任意“福”字，就有机会领取一张福卡。
比如扫下面这个“福”字
</code></pre><p><img src="http://cms-bucket.nosdn.127.net/cfd9b7cb12904ebd9352dcada5c7dd1c20170118151220.png" alt="支付宝五福你集够了吗 揭秘支付宝福字扫描技巧"><br>    支付宝五福你集够了吗 揭秘支付宝福字扫描技巧</p>
<pre><code>支付宝春节集福字活动看这一篇就够了
支付宝这次又加了两张“特殊道具”：“万能福”和“顺手牵羊卡”。其中，万能福可以当做任何一张“福”来用;而顺手牵羊卡则可以随机抽取支付宝好友的福卡。
另外，从1月20日(腊月二十三)开始到除夕夜22点之前，用户开通蚂蚁森林或者给好友浇水，可以随机获得福卡。
可以说，今年集齐难度大大降低，已经有近50万人已经集齐了五福。
</code></pre><p><img src="http://cms-bucket.nosdn.127.net/f0472a988aa2408bbd67180dc1ce887420170118151239.png" alt="支付宝五福你集够了吗 揭秘支付宝福字扫描技巧"><br>    支付宝五福你集够了吗 揭秘支付宝福字扫描技巧</p>
<h1 id="支付宝集五福活动时间"><a href="#支付宝集五福活动时间" class="headerlink" title="支付宝集五福活动时间"></a>支付宝集五福活动时间</h1><pre><code>支付宝集五福活动时间为2017年1月18日--1月27日。
活动分为两波，目前第一波福气已经开启，扫“福”字可随机获得福卡(小编亲测，目前通过扫描福字，每个人每天只能扫到3-4张福字)。

第二波将在1月20日开启，用户开通蚂蚁森林或者给好友浇水，也可以随机获得福卡。
为了让集五福活动更加互动有趣，支付宝这次又加了两张“特殊道具”：“万能福”和“顺手牵羊卡”。其中，万能福可以当做任何一张“福”来用;而顺手牵羊卡则可以随机抽取支付宝好友的福卡。(不过目前，还不知道如何获取到这两个“特殊道具”)

除夕夜22:00截止收集五福，22:18分红包。至于红包金额，支付宝说今年要的是随机，运气最好的666元，运气最差的1-2元。
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[NormalAdapter]]></title>
      <url>https://norwaya.github.io/NormalAdapter/</url>
      <content type="html"><![CDATA[<h1 id="通用的RecyclerView-Adapter"><a href="#通用的RecyclerView-Adapter" class="headerlink" title="通用的RecyclerView.Adapter"></a>通用的RecyclerView.Adapter</h1><a id="more"></a>
<pre><code> package norwaya.android.com.adapterlibrary;

import android.content.Context;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by admin on 2017/1/14.
 */

public class NormalAdapter&lt;T&gt; extends RecyclerView.Adapter&lt;NormalAdapter.ViewHolder&gt; {


List&lt;T&gt; list = new ArrayList&lt;&gt;();
LayoutInflater inflater;

OnCreateViewHolderListener mOnCreateViewHolderListener;
OnBindViewHolderListener mOnBindViewHolderListener;


public NormalAdapter() {
}
public static NormalAdapter newInstance(){
    return new NormalAdapter();
}
public NormalAdapter createView(OnCreateViewHolderListener mOnCreateViewHolderListener) {
    this.mOnCreateViewHolderListener = mOnCreateViewHolderListener;
    return this;
}

public NormalAdapter bindView(OnBindViewHolderListener mOnBindViewHolderListener) {
    this.mOnBindViewHolderListener = mOnBindViewHolderListener;
    return this;
}

public void bindSource(List&lt;? extends T&gt; list) {
    this.list = (List&lt;T&gt;) list;
    notifyDataSetChanged();
}

public interface OnCreateViewHolderListener {
    ViewHolder createViewHoler(ViewGroup parent, int viewType);
}

/**
 * Created by admin on 2017/1/14.
 */
public interface OnBindViewHolderListener {
    void onBindViewHolder(ViewHolder holder, int position);
}

@Override
public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
    if (mOnCreateViewHolderListener != null) {
        return mOnCreateViewHolderListener.createViewHoler(parent, viewType);
    }
    return null;
}

@Override
public void onBindViewHolder(ViewHolder holder, int position) {
    if (mOnBindViewHolderListener != null) {
        mOnBindViewHolderListener.onBindViewHolder(holder, position);
    }
}

@Override
public int getItemCount() {
    return list.size();
}

public abstract static class ViewHolder extends RecyclerView.ViewHolder {

    public ViewHolder(View itemView) {
        super(itemView);
    }
}
</code></pre><p>}</p>
<h1 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h1><pre><code>NormalAdapter adapter = NormalAdapter.newInstance()
  .createView(new NormalAdapter.OnCreateViewHolderListener() {
        @Override
        public NormalAdapter.ViewHolder createViewHoler(ViewGroup parent, int viewType) {
            View view = LayoutInflater.from(MainActivity.this).inflate(R.layout.recyclerview_item, parent, false);
            return new ViewHolder(view);
        }
    })
    .bindView(new NormalAdapter.OnBindViewHolderListener() {
        @Override
        public void onBindViewHolder(NormalAdapter.ViewHolder holder, int position) {
            ViewHolder viewHolder = (ViewHolder) holder;
            viewHolder.tv1.setText(position + &quot;&quot;);
            viewHolder.tv2.setText(array[position]);
        }
    });
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo deploy to github and coding]]></title>
      <url>https://norwaya.github.io/hexo-deployment/</url>
      <content type="html"><![CDATA[<h6 id="如果是用同一个秘钥部署配置如下"><a href="#如果是用同一个秘钥部署配置如下" class="headerlink" title="如果是用同一个秘钥部署配置如下"></a>如果是用同一个秘钥部署配置如下</h6><pre><code>deploy:
  type: git
  repo: 
    coding: git@git.coding.net:norwaya/norwaya.git,master
    github: git@github.com:norwaya/norwaya.github.io.git,master
  branch: master
</code></pre><a id="more"></a>    
<h6 id="每个代码托管网站有都自己的秘钥的时候配置"><a href="#每个代码托管网站有都自己的秘钥的时候配置" class="headerlink" title="每个代码托管网站有都自己的秘钥的时候配置"></a>每个代码托管网站有都自己的秘钥的时候配置</h6><pre><code>deploy:
  type: git
  repo: 
    coding: git@git.coding.net:norwaya/norwaya.git,master
    github: git@github.com:norwaya/norwaya.github.io.git,master
  branch: master
然后要在.ssh 下增加config文件
#github key
Host github.com
   Port 22   
   HostName github.com    
   PreferredAuthentications publickey    
   IdentityFile ~/.ssh/github.id_rsa
# coding key
Host git.coding.net    
  Port 443   
  HostName git-ssh.coding.net    
  PreferredAuthentications publickey    
  IdentityFile ~/.ssh/coding.id_rsa
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[android 视差因子]]></title>
      <url>https://norwaya.github.io/android-ParallaxMultiplier/</url>
      <content type="html"><![CDATA[<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo:"></a>Demo:</h1><a id="more"></a>
<h1 id="code"><a href="#code" class="headerlink" title="code"></a>code</h1><pre><code> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;android.support.design.widget.CoordinatorLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
  xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;&gt;
    &lt;android.support.design.widget.AppBarLayout
        android:id=&quot;@+id/appbar&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;160dp&quot;&gt;
        &lt;android.support.design.widget.CollapsingToolbarLayout
            android:id=&quot;@+id/collapsing_toolbar&quot;
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;match_parent&quot;
            app:expandedTitleMarginEnd=&quot;64dp&quot;
            app:contentScrim=&quot;?attr/colorPrimary&quot;
            app:expandedTitleMarginStart=&quot;48dp&quot;
            app:statusBarScrim=&quot;?attr/colorPrimary&quot;
            app:layout_scrollFlags=&quot;scroll|exitUntilCollapsed&quot;&gt;
    &lt;ImageView
        android:id=&quot;@+id/image&quot;
        app:layout_collapseParallaxMultiplier=&quot;0.6&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        android:scaleType=&quot;fitXY&quot;
        android:src=&quot;@drawable/image&quot;
        app:layout_collapseMode=&quot;parallax&quot; /&gt;
            &lt;android.support.v7.widget.Toolbar
                android:id=&quot;@+id/toolbar&quot;
                android:layout_width=&quot;match_parent&quot;
                android:layout_height=&quot;?attr/actionBarSize&quot;
                app:layout_collapseMode=&quot;pin&quot;
                app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot;&gt;&lt;/android.support.v7.widget.Toolbar&gt;
        &lt;/android.support.design.widget.CollapsingToolbarLayout&gt;
    &lt;/android.support.design.widget.AppBarLayout&gt;
    &lt;android.support.v4.widget.NestedScrollView
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;&gt;
    &lt;/android.support.v4.widget.NestedScrollView&gt;
    &lt;android.support.design.widget.FloatingActionButton
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:src=&quot;@android:drawable/ic_input_add&quot;
        app:backgroundTintMode=&quot;multiply&quot;
        app:layout_anchor=&quot;@id/appbar&quot;
        app:layout_anchorGravity=&quot;bottom|end|right&quot;&gt;&lt;/android.support.design.widget.FloatingActionButton&gt;
&lt;/android.support.design.widget.CoordinatorLayout&gt;
</code></pre><p>imageView 注释：<br>layout_collapseMode (折叠模式) - 有两个值:<br>pin -  设置为这个模式时，当CollapsingToolbarLayout完全收缩后，Toolbar还可以保留在屏幕上。<br>parallax - 设置为这个模式时，在内容滚动时，CollapsingToolbarLayout中的View（比如ImageView)也可以同时滚动，实现视差滚动效果，通常和layout_collapseParallaxMultiplier(设置视差因子)搭配使用。<br>layout_collapseParallaxMultiplier(视差因子) - 设置视差滚动因子，值为：0~1。  具体效果自行测试</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[rxjava 实现的 rxbus]]></title>
      <url>https://norwaya.github.io/rxjava-rxbus/</url>
      <content type="html"><![CDATA[<h2 id="implemetns"><a href="#implemetns" class="headerlink" title="implemetns"></a>implemetns</h2><pre><code>compile &apos;io.reactivex.rxjava2:rxandroid:2.0.1&apos;
compile &apos;io.reactivex.rxjava2:rxjava:2.0.4&apos;
</code></pre><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><a id="more"></a>
<pre><code>public   class MessageEvent {
private String text;

public MessageEvent(String text) {
    this.text = text;
}

public String getText() {
    return text;
}
</code></pre><p>}</p>
<h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><pre><code>import io.reactivex.Observable;
import io.reactivex.subjects.PublishSubject;
import io.reactivex.subjects.Subject;
/**
 * Created by HanHailong on 15/10/9.
 */
public class RxBus {

    private static volatile RxBus mDefaultInstance;

    private RxBus() {
    }

    public static RxBus getDefault() {
        if (mDefaultInstance == null) {
            synchronized (RxBus.class) {
                if (mDefaultInstance == null) {
                    mDefaultInstance = new RxBus();
                }
            }
        }
        return mDefaultInstance;
    }

    private final Subject&lt;Object&gt; _bus = PublishSubject.create().toSerialized();

    public void send(Object o) {
        _bus.onNext(o);
    }

    public &lt;T&gt; Observable&lt;T&gt; toObservable(Class&lt;T&gt; classType) {
        return _bus.ofType(classType);
    }
}
</code></pre><h2 id="接受事件"><a href="#接受事件" class="headerlink" title="接受事件"></a>接受事件</h2><pre><code>Disposable disposable = RxBus.getDefault().toObservable(MessageEvent.class).subscribe(new Consumer&lt;MessageEvent&gt;() {
        @Override
        public void accept(MessageEvent event) throws Exception {
            Toast.makeText(MainActivity.this, TAG + event.getText(), Toast.LENGTH_LONG).show();
            tv.setText(event.getText());
            Log.d(TAG, &quot;onMessageEvent: &quot;);
        }
    });
</code></pre><h2 id="发送事件"><a href="#发送事件" class="headerlink" title="发送事件"></a>发送事件</h2><pre><code>RxBus.getDefault().send(new MessageEvent(&quot; hello rx bus&quot;));
</code></pre><h2 id="取消订阅"><a href="#取消订阅" class="headerlink" title="取消订阅"></a>取消订阅</h2><pre><code>if(disposable != null &amp;&amp; disposable.isDisposed()){
        disposable.dispose();
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[rxjava 实现的 rxbus]]></title>
      <url>https://norwaya.github.io/rxjava%20%E5%AE%9E%E7%8E%B0%20rxbus/</url>
      <content type="html"><![CDATA[<h2 id="implemetns"><a href="#implemetns" class="headerlink" title="implemetns"></a>implemetns</h2><pre><code>compile &apos;io.reactivex.rxjava2:rxandroid:2.0.1&apos;
compile &apos;io.reactivex.rxjava2:rxjava:2.0.4&apos;
</code></pre><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><a id="more"></a>
<pre><code>public   class MessageEvent {
private String text;

public MessageEvent(String text) {
    this.text = text;
}

public String getText() {
    return text;
}
</code></pre><p>}</p>
<h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><pre><code>import io.reactivex.Observable;
import io.reactivex.subjects.PublishSubject;
import io.reactivex.subjects.Subject;
/**
 * Created by HanHailong on 15/10/9.
 */
public class RxBus {

    private static volatile RxBus mDefaultInstance;

    private RxBus() {
    }

    public static RxBus getDefault() {
        if (mDefaultInstance == null) {
            synchronized (RxBus.class) {
                if (mDefaultInstance == null) {
                    mDefaultInstance = new RxBus();
                }
            }
        }
        return mDefaultInstance;
    }

    private final Subject&lt;Object&gt; _bus = PublishSubject.create().toSerialized();

    public void send(Object o) {
        _bus.onNext(o);
    }

    public &lt;T&gt; Observable&lt;T&gt; toObservable(Class&lt;T&gt; classType) {
        return _bus.ofType(classType);
    }
}
</code></pre><h2 id="接受事件"><a href="#接受事件" class="headerlink" title="接受事件"></a>接受事件</h2><pre><code>Disposable disposable = RxBus.getDefault().toObservable(MessageEvent.class).subscribe(new Consumer&lt;MessageEvent&gt;() {
        @Override
        public void accept(MessageEvent event) throws Exception {
            Toast.makeText(MainActivity.this, TAG + event.getText(), Toast.LENGTH_LONG).show();
            tv.setText(event.getText());
            Log.d(TAG, &quot;onMessageEvent: &quot;);
        }
    });
</code></pre><h2 id="发送事件"><a href="#发送事件" class="headerlink" title="发送事件"></a>发送事件</h2><pre><code>RxBus.getDefault().send(new MessageEvent(&quot; hello rx bus&quot;));
</code></pre><h2 id="取消订阅"><a href="#取消订阅" class="headerlink" title="取消订阅"></a>取消订阅</h2><pre><code>if(disposable != null &amp;&amp; disposable.isDisposed()){
        disposable.dispose();
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我的第一篇hexo文章]]></title>
      <url>https://norwaya.github.io/hexo-settings/</url>
      <content type="html"><![CDATA[<h1 id="你好-hexo"><a href="#你好-hexo" class="headerlink" title="你好 hexo"></a>你好 hexo</h1><pre><code>这是我的第一篇hexo文章，当然我本来想写hello world 为题的blog，可是被hexo占了先机，我被迫改了名字。
存档
</code></pre><h1 id="blog-settings"><a href="#blog-settings" class="headerlink" title="blog settings"></a>blog settings</h1><pre><code>[hexo blog 主题配置教程](https://github.com/litten/hexo-theme-yilia) 
[hexo 官方配置教程](https://hexo.io/zh-cn/docs/) 
</code></pre><p><img src="http://p1.bpimg.com/4851/d7ba213a3ac9372d.png" alt="这里写图片描述"><br><a id="more"></a></p>
<h1 id="Settings"><a href="#Settings" class="headerlink" title="Settings"></a>Settings</h1><h2 id="site-网站"><a href="#site-网站" class="headerlink" title="site(网站)"></a>site(网站)</h2><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>title</td>
<td style="text-align:left">网站标题</td>
</tr>
<tr>
<td>subtitle</td>
<td style="text-align:left">网站副标题</td>
</tr>
<tr>
<td>description</td>
<td style="text-align:left">网站描述</td>
</tr>
<tr>
<td>author</td>
<td style="text-align:left">您的名字</td>
</tr>
<tr>
<td>language</td>
<td style="text-align:left">网站使用的语言</td>
</tr>
<tr>
<td>timezone</td>
<td style="text-align:left">网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。</td>
</tr>
</tbody>
</table>
<h2 id="url"><a href="#url" class="headerlink" title="url"></a>url</h2><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:left">描述</th>
<th>默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td>url</td>
<td style="text-align:left">网址</td>
</tr>
<tr>
<td>root</td>
<td style="text-align:left">网站根目录</td>
</tr>
<tr>
<td>permalink</td>
<td style="text-align:left">文章的 永久链接 格式</td>
<td>:year/:month/:day/:title/</td>
</tr>
<tr>
<td>permalink_default</td>
<td style="text-align:left">永久链接中各部分的默认值</td>
</tr>
</tbody>
</table>
<blockquote>
<h5 id="网站存放在子目录"><a href="#网站存放在子目录" class="headerlink" title="网站存放在子目录"></a>网站存放在子目录</h5><p>如果您的网站存放在子目录中，例如 <a href="http://yoursite.com/blog，则请将您的" target="_blank" rel="external">http://yoursite.com/blog，则请将您的</a> url 设为 <a href="http://yoursite.com/blog" target="_blank" rel="external">http://yoursite.com/blog</a> 并把 root 设为 /blog/。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello world]]></title>
      <url>https://norwaya.github.io/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a>
<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
